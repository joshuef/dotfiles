export TERM="xterm-256color"

# Path to your oh-my-zsh configuration.
export ZSH=$HOME/.oh-my-zsh

# Directories to be prepended to $PATH
declare -a dirs_to_prepend
dirs_to_prepend=(
  "/usr/local/sbin"
  "/usr/local/git/bin"
  "/usr/local/"
  "/usr/local/mysql/bin"
  "/sw/bin/"
  "$HOME/dotfiles/bin"
  "$HOME/bin"
  # "$HOME/.rvm/bin"
  # "$(brew --prefix ruby)/bin"
  # "$(brew --prefix coreutils)/libexec/gnubin" # Add brew-installed GNU core utilities bin
  # "$(brew --prefix)/share/npm/bin" # Add npm-installed package bin,
  # "$HOME/.cargo/bin"
  # "$HOME/emsdk-portable"
  # "$HOME/emsdk-portable/clang/fastcomp/build_incoming_64/bin"
  # "$HOME/emsdk-portable/emscripten/incoming"
)


# Explicitly configured $PATH
PATH="/usr/bin:/usr/local/bin:/bin:/usr/sbin:/sbin"

for dir in ${(k)dirs_to_prepend[@]}
do
  if [ -d ${dir} ]; then
    # If these directories exist, then prepend them to existing PATH
    PATH="${dir}:$PATH"
  fi
done

unset dirs_to_prepend

export PATH

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="powerlevel9k/powerlevel9k"
POWERLEVEL9K_SHORTEN_STRATEGY="truncate_middle"
POWERLEVEL9K_SHORTEN_DIR_LENGTH=3
POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status nvm node_version)
POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=( dir vcs )

DEFAULT_USER="joshuef"


# Z beats cd most of the time
. ~/z/z.sh

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=$HOME/dotfiles/zsh

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(fabric brew node npm history git-flow zsh-syntax-highlighting autoenv zsh-autosuggestions zsh-dircolors-solarized)

# User configuration

# Load the shell dotfiles
# for file in $HOME/.{shell_exports,shell_aliases,shell_functions,shell_config}; do
#   [ -r "$file" ] && [ -f "$file" ] && source "$file";
# done;
# unset file;
#
# if [ -f `brew --prefix`/etc/bash_completion ]; then
#   . `brew --prefix`/etc/bash_completion
# fi

# Automatically list directory contents on `cd`.
# auto-ls () {
#   emulate -L zsh;
#   # explicit sexy ls'ing as aliases arent honored in here.
#   hash gls >/dev/null 2>&1 && CLICOLOR_FORCE=1 gls -aFh --color --group-directories-first || ls
# }
# chpwd_functions=( auto-ls $chpwd_functions )

source $ZSH/oh-my-zsh.sh

# Source local extra (private) settings specific to machine if it exists
# [ -f ~/.zsh.local ] && source ~/.zsh.local

# npm tab completion
# . <(npm completion)

# fortune: brew install fortune ponysay
# fortune | ponysay

#NVM
# Lazy NVM loading for rapid bash startup
load-nvmrc() {
  if [[ -f .node-version && -r .node-version ]]; then
    nvm use &> /dev/null
  elif [[ $(nvm version) != $(nvm version default)  ]]; then
    nvm use &> /dev/null
  fi
  # setRightPrompt
}

# Defer initialization of nvm until nvm, node or a node-dependent command is
# run. Ensure this block is only run once if .bashrc gets sourced multiple times
# by checking whether __init_nvm is a function.
if [ -s "$HOME/.nvm/nvm.sh" ] && [ ! "$(whence -w __init_nvm)" = function ]; then
  export NVM_DIR="$HOME/.nvm"
  [ -s "$NVM_DIR/bash_completion" ] && . "$NVM_DIR/bash_completion"
  declare -a __node_commands=('nvm' 'node' 'npm' 'yarn' 'gulp' 'grunt' 'webpack' 'topgun')
  function __init_nvm() {
    for i in "${__node_commands[@]}"; do unalias $i; done
    . "$NVM_DIR"/nvm.sh
    unset __node_commands
    unset -f __init_nvm
    # add-zsh-hook chpwd load-nvmrc
    load-nvmrc
  }
  for i in "${__node_commands[@]}"; do alias $i='__init_nvm && '$i; done
fi



# alias

alias rm=trash
alias atom=atom-beta
alias ls="ls -G"
alias cat="bat"
alias du="ncdu --color dark -rr -x --exclude .git --exclude node_modules"

alias preview="fzf --preview 'bat --color \"always\" {}'"
# add support for ctrl+o to open selected file in VS Code
FZF_DEFAULT_OPTS="--bind='ctrl-o:execute(code {})+abort'"


# alias npm=yarn

# Autosuggest
# bindkey '^ ' autosuggest-execute

# tabtab source for electron-forge package
# # uninstall by removing these lines or running `tabtab uninstall electron-forge`
# [[ -f /Users/josh/Projects/safe/forks/safe_examples/email_app/node_modules/tabtab/.completions/electron-forge.zsh ]] && . /Users/josh/Projects/safe/forks/safe_examples/email_app/node_modules/tabtab/.completions/electron-forge.zsh
# # added by travis gem
# [ -f /Users/josh/.travis/travis.sh ] && source /Users/josh/.travis/travis.sh


pkg_verify() {
  if [ $# -ne 1 ]; then
    echo "Missing package to verify."
    return 1
  fi

  spctl -a -v "$1"
  codesign -v --verbose "$1"
}

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
