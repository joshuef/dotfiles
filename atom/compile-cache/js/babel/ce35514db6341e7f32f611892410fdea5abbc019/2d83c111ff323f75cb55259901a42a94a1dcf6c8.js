Object.defineProperty(exports, '__esModule', {
	value: true
});

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/** @babel */

var _fs = require('fs');

var _fs2 = _interopRequireDefault(_fs);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _pify = require('pify');

var _pify2 = _interopRequireDefault(_pify);

var init = function init() {
	var basePath = '';

	if (atom.project.getPaths().length > 0) {
		basePath = atom.project.getPaths()[0];
	} else if (atom.workspace.getActiveTextEditor() && atom.workspace.getActiveTextEditor().getPath()) {
		basePath = _path2['default'].dirname(atom.workspace.getActiveTextEditor().getPath());
	} else {
		atom.notifications.addError('An .editorconfig file can\'t be generated without an open file or project.');
		return;
	}

	var configFile = _path2['default'].join(basePath, '.editorconfig');

	var conf = {
		core: atom.config.get('core'),
		editor: atom.config.get('editor'),
		whitespace: atom.config.get('whitespace')
	};

	var indent = conf.editor.softTabs ? 'indent_style = space\nindent_size = ' + conf.editor.tabLength : 'indent_style = tab';

	var endOfLine = process.platform === 'win32' ? 'crlf' : 'lf';
	var charset = conf.core.fileEncoding.replace('utf8', 'utf-8') || 'utf-8';

	var removeTrailingWhitespace = atom.config.get('whitespace.removeTrailingWhitespace') && 'true' || 'false';
	var ensureFinalNewline = atom.config.get('whitespace.ensureSingleTrailingNewline') && 'true' || 'false';

	var ret = 'root = true\n\n[*]\n' + indent + '\nend_of_line = ' + endOfLine + '\ncharset = ' + charset + '\ntrim_trailing_whitespace = ' + removeTrailingWhitespace + '\ninsert_final_newline = ' + ensureFinalNewline + '\n\n[*.md]\ntrim_trailing_whitespace = false\n';

	(0, _pify2['default'])(_fs2['default'].writeFile)(configFile, ret, { flag: 'wx' }).then(function () {
		atom.notifications.addSuccess('.editorconfig file successfully generated', {
			detail: 'An .editorconfig file was successfully generated in your project based on your current settings.'
		});
	})['catch'](function (error) {
		if (error.code === 'EEXIST') {
			atom.notifications.addError('An .editorconfig file already exists in your project root.');
		} else {
			atom.notifications.addError(error.message, { detail: error.stack });
		}
	});
};

var subscriber = function subscriber() {
	atom.commands.add('atom-workspace', 'EditorConfig:generate-config', init);
};

exports['default'] = subscriber;
exports.init = init;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qb3NoL2RvdGZpbGVzL2F0b20vcGFja2FnZXMvZWRpdG9yY29uZmlnL2NvbW1hbmRzL2dlbmVyYXRlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O2tCQUNlLElBQUk7Ozs7b0JBQ0YsTUFBTTs7OztvQkFDTixNQUFNOzs7O0FBRXZCLElBQU0sSUFBSSxHQUFHLFNBQVAsSUFBSSxHQUFTO0FBQ2xCLEtBQUksUUFBUSxHQUFHLEVBQUUsQ0FBQzs7QUFFbEIsS0FBSSxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsRUFBRSxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7QUFDdkMsVUFBUSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7RUFDdEMsTUFBTSxJQUFJLElBQUksQ0FBQyxTQUFTLENBQUMsbUJBQW1CLEVBQUUsSUFDOUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxtQkFBbUIsRUFBRSxDQUFDLE9BQU8sRUFBRSxFQUFFO0FBQ2hELFVBQVEsR0FBRyxrQkFBSyxPQUFPLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxtQkFBbUIsRUFBRSxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUM7RUFDeEUsTUFBTTtBQUNOLE1BQUksQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDLDRFQUE0RSxDQUFDLENBQUM7QUFDMUcsU0FBTztFQUNQOztBQUVELEtBQU0sVUFBVSxHQUFHLGtCQUFLLElBQUksQ0FBQyxRQUFRLEVBQUUsZUFBZSxDQUFDLENBQUM7O0FBRXhELEtBQU0sSUFBSSxHQUFHO0FBQ1osTUFBSSxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQztBQUM3QixRQUFNLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDO0FBQ2pDLFlBQVUsRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUM7RUFDekMsQ0FBQzs7QUFFRixLQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsNENBQ0ssSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLEdBQzVELG9CQUFvQixDQUFDOztBQUV0QixLQUFNLFNBQVMsR0FBRyxPQUFPLENBQUMsUUFBUSxLQUFLLE9BQU8sR0FBRyxNQUFNLEdBQUcsSUFBSSxDQUFDO0FBQy9ELEtBQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEVBQUUsT0FBTyxDQUFDLElBQUksT0FBTyxDQUFDOztBQUUzRSxLQUFNLHdCQUF3QixHQUM3QixBQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLHFDQUFxQyxDQUFDLElBQUksTUFBTSxJQUNqRSxPQUFPLEFBQ1AsQ0FBQztBQUNGLEtBQU0sa0JBQWtCLEdBQ3ZCLEFBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsd0NBQXdDLENBQUMsSUFBSSxNQUFNLElBQ3BFLE9BQU8sQUFDUCxDQUFDOztBQUVGLEtBQU0sR0FBRyw0QkFJUixNQUFNLHdCQUNRLFNBQVMsb0JBQ2IsT0FBTyxxQ0FDVSx3QkFBd0IsaUNBQzVCLGtCQUFrQixtREFJMUMsQ0FBQzs7QUFFRCx3QkFBSyxnQkFBRyxTQUFTLENBQUMsQ0FBQyxVQUFVLEVBQUUsR0FBRyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksRUFBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFlBQU07QUFDNUQsTUFBSSxDQUFDLGFBQWEsQ0FBQyxVQUFVLENBQUMsMkNBQTJDLEVBQUU7QUFDMUUsU0FBTSxFQUFFLGtHQUFrRztHQUMxRyxDQUFDLENBQUM7RUFDSCxDQUFDLFNBQU0sQ0FBQyxVQUFBLEtBQUssRUFBSTtBQUNqQixNQUFJLEtBQUssQ0FBQyxJQUFJLEtBQUssUUFBUSxFQUFFO0FBQzVCLE9BQUksQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDLDREQUE0RCxDQUFDLENBQUM7R0FDMUYsTUFBTTtBQUNOLE9BQUksQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxPQUFPLEVBQUUsRUFBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLEtBQUssRUFBQyxDQUFDLENBQUM7R0FDbEU7RUFDRCxDQUFDLENBQUM7Q0FDSCxDQUFDOztBQUVGLElBQU0sVUFBVSxHQUFHLFNBQWIsVUFBVSxHQUFTO0FBQ3hCLEtBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLGdCQUFnQixFQUFFLDhCQUE4QixFQUFFLElBQUksQ0FBQyxDQUFDO0NBQzFFLENBQUM7O3FCQUVNLFVBQVU7UUFBYSxJQUFJLEdBQUosSUFBSSIsImZpbGUiOiIvVXNlcnMvam9zaC9kb3RmaWxlcy9hdG9tL3BhY2thZ2VzL2VkaXRvcmNvbmZpZy9jb21tYW5kcy9nZW5lcmF0ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAYmFiZWwgKi9cbmltcG9ydCBmcyBmcm9tICdmcyc7XG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcbmltcG9ydCBwaWZ5IGZyb20gJ3BpZnknO1xuXG5jb25zdCBpbml0ID0gKCkgPT4ge1xuXHRsZXQgYmFzZVBhdGggPSAnJztcblxuXHRpZiAoYXRvbS5wcm9qZWN0LmdldFBhdGhzKCkubGVuZ3RoID4gMCkge1xuXHRcdGJhc2VQYXRoID0gYXRvbS5wcm9qZWN0LmdldFBhdGhzKClbMF07XG5cdH0gZWxzZSBpZiAoYXRvbS53b3Jrc3BhY2UuZ2V0QWN0aXZlVGV4dEVkaXRvcigpICYmXG5cdFx0YXRvbS53b3Jrc3BhY2UuZ2V0QWN0aXZlVGV4dEVkaXRvcigpLmdldFBhdGgoKSkge1xuXHRcdGJhc2VQYXRoID0gcGF0aC5kaXJuYW1lKGF0b20ud29ya3NwYWNlLmdldEFjdGl2ZVRleHRFZGl0b3IoKS5nZXRQYXRoKCkpO1xuXHR9IGVsc2Uge1xuXHRcdGF0b20ubm90aWZpY2F0aW9ucy5hZGRFcnJvcignQW4gLmVkaXRvcmNvbmZpZyBmaWxlIGNhblxcJ3QgYmUgZ2VuZXJhdGVkIHdpdGhvdXQgYW4gb3BlbiBmaWxlIG9yIHByb2plY3QuJyk7XG5cdFx0cmV0dXJuO1xuXHR9XG5cblx0Y29uc3QgY29uZmlnRmlsZSA9IHBhdGguam9pbihiYXNlUGF0aCwgJy5lZGl0b3Jjb25maWcnKTtcblxuXHRjb25zdCBjb25mID0ge1xuXHRcdGNvcmU6IGF0b20uY29uZmlnLmdldCgnY29yZScpLFxuXHRcdGVkaXRvcjogYXRvbS5jb25maWcuZ2V0KCdlZGl0b3InKSxcblx0XHR3aGl0ZXNwYWNlOiBhdG9tLmNvbmZpZy5nZXQoJ3doaXRlc3BhY2UnKVxuXHR9O1xuXG5cdGNvbnN0IGluZGVudCA9IGNvbmYuZWRpdG9yLnNvZnRUYWJzID9cblx0XHRgaW5kZW50X3N0eWxlID0gc3BhY2VcXG5pbmRlbnRfc2l6ZSA9ICR7Y29uZi5lZGl0b3IudGFiTGVuZ3RofWAgOlxuXHRcdCdpbmRlbnRfc3R5bGUgPSB0YWInO1xuXG5cdGNvbnN0IGVuZE9mTGluZSA9IHByb2Nlc3MucGxhdGZvcm0gPT09ICd3aW4zMicgPyAnY3JsZicgOiAnbGYnO1xuXHRjb25zdCBjaGFyc2V0ID0gY29uZi5jb3JlLmZpbGVFbmNvZGluZy5yZXBsYWNlKCd1dGY4JywgJ3V0Zi04JykgfHwgJ3V0Zi04JztcblxuXHRjb25zdCByZW1vdmVUcmFpbGluZ1doaXRlc3BhY2UgPSAoXG5cdFx0KGF0b20uY29uZmlnLmdldCgnd2hpdGVzcGFjZS5yZW1vdmVUcmFpbGluZ1doaXRlc3BhY2UnKSAmJiAndHJ1ZScpIHx8XG5cdFx0J2ZhbHNlJ1xuXHQpO1xuXHRjb25zdCBlbnN1cmVGaW5hbE5ld2xpbmUgPSAoXG5cdFx0KGF0b20uY29uZmlnLmdldCgnd2hpdGVzcGFjZS5lbnN1cmVTaW5nbGVUcmFpbGluZ05ld2xpbmUnKSAmJiAndHJ1ZScpIHx8XG5cdFx0J2ZhbHNlJ1xuXHQpO1xuXG5cdGNvbnN0IHJldCA9XG5gcm9vdCA9IHRydWVcblxuWypdXG4ke2luZGVudH1cbmVuZF9vZl9saW5lID0gJHtlbmRPZkxpbmV9XG5jaGFyc2V0ID0gJHtjaGFyc2V0fVxudHJpbV90cmFpbGluZ193aGl0ZXNwYWNlID0gJHtyZW1vdmVUcmFpbGluZ1doaXRlc3BhY2V9XG5pbnNlcnRfZmluYWxfbmV3bGluZSA9ICR7ZW5zdXJlRmluYWxOZXdsaW5lfVxuXG5bKi5tZF1cbnRyaW1fdHJhaWxpbmdfd2hpdGVzcGFjZSA9IGZhbHNlXG5gO1xuXG5cdHBpZnkoZnMud3JpdGVGaWxlKShjb25maWdGaWxlLCByZXQsIHtmbGFnOiAnd3gnfSkudGhlbigoKSA9PiB7XG5cdFx0YXRvbS5ub3RpZmljYXRpb25zLmFkZFN1Y2Nlc3MoJy5lZGl0b3Jjb25maWcgZmlsZSBzdWNjZXNzZnVsbHkgZ2VuZXJhdGVkJywge1xuXHRcdFx0ZGV0YWlsOiAnQW4gLmVkaXRvcmNvbmZpZyBmaWxlIHdhcyBzdWNjZXNzZnVsbHkgZ2VuZXJhdGVkIGluIHlvdXIgcHJvamVjdCBiYXNlZCBvbiB5b3VyIGN1cnJlbnQgc2V0dGluZ3MuJ1xuXHRcdH0pO1xuXHR9KS5jYXRjaChlcnJvciA9PiB7XG5cdFx0aWYgKGVycm9yLmNvZGUgPT09ICdFRVhJU1QnKSB7XG5cdFx0XHRhdG9tLm5vdGlmaWNhdGlvbnMuYWRkRXJyb3IoJ0FuIC5lZGl0b3Jjb25maWcgZmlsZSBhbHJlYWR5IGV4aXN0cyBpbiB5b3VyIHByb2plY3Qgcm9vdC4nKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0YXRvbS5ub3RpZmljYXRpb25zLmFkZEVycm9yKGVycm9yLm1lc3NhZ2UsIHtkZXRhaWw6IGVycm9yLnN0YWNrfSk7XG5cdFx0fVxuXHR9KTtcbn07XG5cbmNvbnN0IHN1YnNjcmliZXIgPSAoKSA9PiB7XG5cdGF0b20uY29tbWFuZHMuYWRkKCdhdG9tLXdvcmtzcGFjZScsICdFZGl0b3JDb25maWc6Z2VuZXJhdGUtY29uZmlnJywgaW5pdCk7XG59O1xuXG5leHBvcnQge3N1YnNjcmliZXIgYXMgZGVmYXVsdCwgaW5pdH07XG4iXX0=